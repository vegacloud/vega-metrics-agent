name: golangci-lint
on:
  workflow_dispatch:
  pull_request:
   branches:
      - main
permissions:
  id-token: write
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        id: setup-actions
      - name: Print github ref_name
        run: echo github.ref_name
      - name: Queue
        id: queue
        uses: ahmadnassri/action-workflow-queue@v1.1.4
        with:
          timeout: 3000000
      - uses: actions/setup-go@v5
        id: setup-go
        with:
          go-version: stable
      - name: golangci-lint
        id: golangci-lint
        # 6.0.1
        uses: golangci/golangci-lint-action@a4f60bb28d35aeee14e6880718e0c85ff1882e64
        with:
          version: latest
          only-new-issues: 'true'
      - name: send workflow failure
        if: ${{ job.status == 'failure' }}
        id: slack_results
        uses: act10ns/slack@v2.1.0
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  geosec:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        id: setup-actions
        uses: actions/checkout@v4.1.1
      - name: Run Gosec Security Scanner
        id: run-gosec
        uses: securego/gosec@master
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: '-no-fail -fmt sarif -out results.sarif ./...'
      - name: Upload SARIF file
        id: upload-file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
      - name: send workflow failure
        if: ${{ job.status == 'failure' }}
        id: slack_results
        uses: act10ns/slack@v2.1.0
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    
          
